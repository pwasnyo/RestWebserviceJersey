{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server to test crud on Person object.",
    "version": "1.0.0",
    "title": "Swagger Person Crud",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "picol201@yahoo.fr"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:8080",
  "basePath": "/person-rest/rest/person",
  "schemes": [
    "http"
  ],
  "paths": {
    "/add": {
      "post": {
        "tags": [
          "add person"
        ],
        "summary": "Add a new person",
        "description": "",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "L'objet Person Ã  rajouter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Person"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/{personId}/delete": {
      "delete": {
        "tags": [
          "delete person"
        ],
        "summary": "Deletes a person by given id",
        "description": "",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Person id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Person not found"
          }
        }
      }
    },
    "/{personId}/get": {
      "get": {
        "tags": [
          "get person by given his id"
        ],
        "summary": "Finds Person by id",
        "description": "",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Person"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/getAll": {
      "get": {
        "tags": [
          "get all existing person"
        ],
        "summary": "Finds All Person",
        "description": "",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Person"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Person": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of Person"
        },
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "Person"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}